{"ast":null,"code":"var _jsxFileName = \"/srv/http/react/first_react/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContactCard from \"./ContactCard\";\nimport ContactCardsList from \"./ContactCardsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false,\n      isLoggedColor: \"red\"\n    };\n    this.loginApp = this.loginApp.bind(this);\n  }\n\n  loginApp() {\n    this.setState(prevState => {\n      return {\n        isLoggedIn: !prevState.isLoggedIn,\n        isLoggedColor: prevState.isLoggedColor = \"green\" ? \"red\" : \"green\"\n      };\n    });\n  }\n\n  render() {\n    const contactsList = ContactCardsList.map(obj => /*#__PURE__*/_jsxDEV(ContactCard, {\n      name: obj.name,\n      imgUrl: obj.imgUrl,\n      phone: obj.phone,\n      email: obj.email\n    }, obj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 58\n    }, this));\n    const logged = this.state.isLoggedIn ? \"Logged\" : \"Not Logged\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: this.state.isLoggedColor\n        },\n        children: logged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loginApp,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), contactsList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/srv/http/react/first_react/src/App.js"],"names":["React","Component","ReactDOM","ContactCard","ContactCardsList","App","constructor","state","isLoggedIn","isLoggedColor","loginApp","bind","setState","prevState","render","contactsList","map","obj","name","imgUrl","phone","email","id","logged","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACC,SAAxB,CAAiC;AAC7BK,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAG,KADN;AAEPC,MAAAA,aAAa,EAAG;AAFT,KAAX;AAIN,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACG;;AAEDD,EAAAA,QAAQ,GAAE;AACN,SAAKE,QAAL,CAAcC,SAAS,IAAG;AACtB,aAAO;AACHL,QAAAA,UAAU,EAAE,CAACK,SAAS,CAACL,UADpB;AAEHC,QAAAA,aAAa,EAAGI,SAAS,CAACJ,aAAV,GAAwB,UAAU,KAAV,GAAkB;AAFvD,OAAP;AAIH,KALD;AAMH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,GAAGX,gBAAgB,CAACY,GAAjB,CAAqBC,GAAG,iBAAI,QAAC,WAAD;AAEG,MAAA,IAAI,EAAEA,GAAG,CAACC,IAFb;AAGG,MAAA,MAAM,EAAED,GAAG,CAACE,MAHf;AAIG,MAAA,KAAK,EAAEF,GAAG,CAACG,KAJd;AAKG,MAAA,KAAK,EAAEH,GAAG,CAACI;AALd,OACQJ,GAAG,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,YAA5B,CAArB;AAQA,UAAMC,MAAM,GAAG,KAAKhB,KAAL,CAAWC,UAAX,GAAwB,QAAxB,GAAmC,YAAlD;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACR;AAAI,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAC,KAAKjB,KAAL,CAAWE;AAAlB,SAAX;AAAA,kBAA8Cc;AAA9C;AAAA;AAAA;AAAA;AAAA,cADQ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKb,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKK,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AArC4B;;AAwCjC,eAAeV,GAAf","sourcesContent":["import React, { Component } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport ContactCard from \"./ContactCard\"\nimport ContactCardsList from \"./ContactCardsList\"\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            isLoggedIn : false,\n            isLoggedColor : \"red\"\n        }\n\t\tthis.loginApp = this.loginApp.bind(this)\n    }\n\n    loginApp(){\n        this.setState(prevState =>{\n            return {\n                isLoggedIn: !prevState.isLoggedIn,\n                isLoggedColor : prevState.isLoggedColor=\"green\" ? \"red\" : \"green\"\n            }\n        })\n    }\n\n    render(){\n        const contactsList = ContactCardsList.map(obj => <ContactCard \n                                                            key={obj.id}\n                                                            name={obj.name}\n                                                            imgUrl={obj.imgUrl}\n                                                            phone={obj.phone}\n                                                            email={obj.email}\n                                                            />)\n\n        const logged = this.state.isLoggedIn ? \"Logged\" : \"Not Logged\"\n\n        return (\n            <div className=\"contacts\">\n\t\t\t\t<h1 style={{color:this.state.isLoggedColor}}>{logged}</h1>\n                <button onClick={this.loginApp}>Login</button>\n                {contactsList}\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}